# Configurações do Spring Boot para Banking Infrastructure
spring:
  # Configuração do DataSource
  datasource:
    url: jdbc:postgresql://localhost:5432/banking
    username: banking
    password: banking
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      max-lifetime: 1200000

  # Configuração do JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        generate_statistics: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # Configuração do Flyway
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Configuração do Redis
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 10
        max-idle: 8
        min-idle: 2

  # Configuração do RabbitMQ
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 60000
    listener:
      simple:
        acknowledge-mode: auto
        concurrency: 1
        max-concurrency: 3
        prefetch: 10
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000

# Configurações específicas da aplicação Banking
banking:
  messaging:
    exchange: banking.events
    queues:
      account-created: banking.account.created
      transfer-completed: banking.transfer.completed
      transfer-failed: banking.transfer.failed
  
  cache:
    ttl:
      default: 3600 # 1 hora em segundos
      idempotency: 86400 # 24 horas em segundos
      account-info: 1800 # 30 minutos em segundos

# Configurações de logging
logging:
  level:
    com.banking: DEBUG
    org.springframework.transaction: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Configurações de gerenciamento e saúde
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always