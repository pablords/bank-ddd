# Configuração principal da aplicação Banking
app:
  name: Banking Application
  version: 1.0.0
  description: Sistema bancário acadêmico para validação de conceitos ACID

# Configuração do servidor
server:
  port: 8080
  servlet:
    context-path: 
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Configuração do Spring
spring:
  application:
    name: application
  
  profiles:
    active: dev
  
  # Configuração do DataSource
  datasource:
    url: jdbc:postgresql://localhost:5432/banking
    username: banking
    password: banking
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

  # Configuração do JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        generate_statistics: false
        jdbc:
          batch_size: 20
          fetch_size: 50
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true

  # Configuração do Flyway
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  # Configuração do Redis
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

  # Configuração do RabbitMQ
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    connection-timeout: 60000
    listener:
      simple:
        acknowledge-mode: auto
        concurrency: 1
        max-concurrency: 3
        prefetch: 10
        retry:
          enabled: true
          initial-interval: 1000
          max-attempts: 3
          max-interval: 10000
          multiplier: 2

# Configurações específicas da aplicação Banking
banking:
  messaging:
    exchange: banking.events
    queues:
      account-created: banking.account.created
      transfer-completed: banking.transfer.completed
      transfer-failed: banking.transfer.failed
  
  cache:
    ttl:
      default: 3600 # 1 hora em segundos
      idempotency: 86400 # 24 horas em segundos
      account-info: 1800 # 30 minutos em segundos
  
  business:
    transfer:
      max-amount: 100000.00 # Valor máximo por transferência
      daily-limit: 500000.00 # Limite diário por conta
    account:
      min-balance: 0.00 # Saldo mínimo permitido

# Configurações de logging
logging:
  level:
    root: INFO
    com.banking: DEBUG
    org.springframework.transaction: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 30

# Configurações de gerenciamento e saúde
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# Informações da aplicação para Actuator
info:
  app:
    name: ${app.name}
    description: ${app.description}
    version: ${app.version}
    encoding: UTF-8
    java:
      version: ${java.version}
  build:
    artifact: ${project.artifactId:bootstrap}
    name: ${project.name:Banking Bootstrap}
    time: ${maven.build.timestamp:unknown}
    version: ${project.version:unknown}

---
# Configuração para ambiente de desenvolvimento
spring:
  config:
    activate:
      on-profile: dev
  
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        generate_statistics: true

logging:
  level:
    com.banking: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE

---
# Configuração para ambiente de teste
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
  flyway:
    enabled: false

---
# Configuração para ambiente de produção
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: WARN
    com.banking: INFO
    org.springframework.transaction: WARN
    org.hibernate.SQL: WARN

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus